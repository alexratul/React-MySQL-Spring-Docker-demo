version: "3.9"
services:
  mysql:
    image: mysql:9.4.0
    container_name: mysql_container

    restart: unless-stopped
    env_file:
      - ../.env
    ports:
      - "3306:3306"
    volumes:
      # The path on the host machine where ther database files are going to be stored!!
      - ../04-database/database/mysql-data:/var/lib/mysql
      # Optional: initialization scripts (run once on first startup if DB is empty)
      - ../04-database/database/initdb:/docker-entrypoint-initdb.d

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -uroot -p$$MYSQL_ROOT_PASSWORD || exit 1",
        ]
      interval: 3s
      retries: 20
      timeout: 5s
      start_period: 5m
    
    networks:
      - my-app-network

  # flyway:
  #   image: flyway/flyway:10
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   command: >
  #     -url=jdbc:mysql://mysql:3306/$$MYSQL_DATABASE
  #     -user=$$MYSQL_USER
  #     -password=$$MYSQL_PASSWORD
  #     -connectRetries=30
  #     migrate
  #   volumes:
  #     - ../04-database/database/initdb:/flyway/sql:ro
  #   restart: "no"
    
  #   env_file:
  #     - ../.env
  
  #   networks:
  #   - my-app-network

  back-end:
      build:
        context: ./
      
      env_file:
        - ../.env

      environment:
          SPRING_DATASOURCE: mysql

      depends_on:
        mysql:
            condition: service_healthy

      container_name: springBoot_backend_container

      ports:
         - "8080:8080"

      networks:
      - my-app-network 

networks:
  my-app-network:
    driver: bridge